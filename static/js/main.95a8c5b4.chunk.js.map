{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","findUserById","usersFromServer","find","user","GetTodosWithUsers","todosFromServer","map","todo","App","useState","todos","setTodos","newTitle","setNewTitle","newUserNameId","setNewUserNameId","newTitleErrorMessage","setNewTitleErrorMessage","newUserNameIdErrorMessage","setNewUserNameIdErrorMessage","className","action","method","onSubmit","event","preventDefault","prev","array","newTodo","Math","max","el","type","placeholder","value","onChange","target","cn","inputError","Boolean","errorMessageVisible","disabled","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95a8c5b4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport cn from 'classnames';\nimport { FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst findUserById = (userId: number) => (\n  usersFromServer.find((user) => user.id === userId)\n);\n\nconst GetTodosWithUsers = () => (\n  todosFromServer.map(todo => ({\n    ...todo,\n    user: findUserById(todo.userId),\n  }))\n);\n\nconst getNewId = (array: { id: number }[]) => (\n  Math.max(...array.map(el => el.id)) + 1\n);\n\nexport const App = () => {\n  const [todos, setTodos] = useState(GetTodosWithUsers);\n\n  const [newTitle, setNewTitle] = useState('');\n  const [newUserNameId, setNewUserNameId] = useState(0);\n\n  const [newTitleErrorMessage, setNewTitleErrorMessage] = useState('');\n  const [newUserNameIdErrorMessage, setNewUserNameIdErrorMessage]\n   = useState('');\n\n  const heandleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const reset = () => {\n      setNewTitle('');\n      setNewUserNameId(0);\n    };\n\n    if (!newUserNameId || !newTitle) {\n      setNewTitleErrorMessage(!newTitle ? 'Please enter a title' : '');\n      setNewUserNameIdErrorMessage(!newUserNameId\n        ? 'Please choose a user'\n        : '');\n\n      return;\n    }\n\n    setTodos(prev => {\n      const newTodo = {\n        completed: false,\n        id: getNewId(prev),\n        title: newTitle,\n        userId: newUserNameId,\n        user: findUserById(newUserNameId),\n      };\n\n      return [...prev, newTodo];\n    });\n\n    reset();\n  };\n\n  const handleChangeNewTitle = (value: string) => {\n    setNewTitle(value);\n    setNewTitleErrorMessage('');\n  };\n\n  const handleChangeNewUserNameId = (value: string) => {\n    setNewUserNameId(+value);\n    setNewUserNameIdErrorMessage('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={heandleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTitle}\n              onChange={(event) => handleChangeNewTitle(event.target.value)}\n              className={cn('input', {\n                inputError: Boolean(newTitleErrorMessage),\n              })}\n            />\n          </label>\n          <span className={cn('Please enter a title', 'errorMessage', {\n            errorMessageVisible: Boolean(newTitleErrorMessage),\n          })}\n          >\n            {newTitleErrorMessage}\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={newUserNameId}\n              onChange={(event) => handleChangeNewUserNameId(\n                event.target.value,\n              )}\n              className={cn('input', {\n                inputError: Boolean(newUserNameIdErrorMessage),\n              })}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <span className={cn('ErrorMessage', 'errorMessage', {\n            errorMessageVisible: Boolean(newUserNameId),\n          })}\n          >\n            {newUserNameIdErrorMessage}\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {todos.map(todo => (\n          <article\n            data-id=\"1\"\n            className={cn(todo.completed\n              ? 'TodoInfo TodoInfo--completed'\n              : 'TodoInfo')}\n            key={todo.id}\n          >\n            <h2 className=\"TodoInfo__title\">\n              {todo.title}\n            </h2>\n\n            <a\n              className={todo.user?.username}\n              href={`mailto:${todo.user?.email}`}\n            >\n              {todo.user?.name}\n            </a>\n          </article>\n        ))}\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}